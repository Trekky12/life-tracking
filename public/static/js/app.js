"use strict";function handleNetworkChange(e){navigator.onLine?(document.body.classList.remove("offline"),document.getElementById("offline-alert").classList.add("hidden"),setFormFields(!1)):(document.body.classList.add("offline"),document.getElementById("offline-alert").classList.remove("hidden"),setFormFields(!0))}function setFormFields(e){document.querySelectorAll('form input, form select, form button[type="submit"]').forEach(function(t,n){e?t.setAttribute("disabled",!0):t.removeAttribute("disabled")})}function initialize(){if(null!==pushButton){if(!("PushManager"in window))return console.warn("Push notifications are not supported by this browser"),void updateButton("incompatible");if(!("showNotification"in ServiceWorkerRegistration.prototype))return console.warn("Notifications are not supported by this browser"),void updateButton("incompatible");if("denied"===Notification.permission)return console.warn("Notifications are denied by the user"),pushButton.disabled=!0,void updateButton("incompatible");pushButton.addEventListener("click",function(){isSubscribed?unsubscribeUser():subscribeUser()}),navigator.serviceWorker.ready.then(function(e){return e.pushManager.getSubscription()}).then(function(e){if(updateButton("disabled"),!e)throw"No Subscription returned";return updateSubscriptionOnServer(e,"PUT")}).then(function(e){getCategorySubscriptions(e)}).then(function(){updateButton("enabled")}).catch(function(e){console.error("Error when updating the subscription",e)})}}function subscribeUser(){const e=urlB64ToUint8Array(jsObject.applicationServerPublicKey);updateButton("computing"),navigator.serviceWorker.ready.then(function(t){return console.log("Subscribing.."),t.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:e})}).then(function(e){return console.log("User is subscribed."),updateSubscriptionOnServer(e,"POST")}).then(function(e){getCategorySubscriptions(e)}).then(function(){updateButton("enabled")}).catch(function(e){"denied"===Notification.permission?(console.warn("Notifications are denied by the user."),updateButton("incompatible")):(console.error("Impossible to subscribe to push notifications",e),updateButton("disabled"))})}function unsubscribeUser(){navigator.serviceWorker.ready.then(function(e){return e.pushManager.getSubscription()}).then(function(e){if(!e)throw updateButton("disabled"),"No Subscription returned";return updateSubscriptionOnServer(e,"DELETE")}).then(function(e){e.unsubscribe(),console.log("User is unsubscribed.")}).then(function(){categoriesList.classList.add("hidden"),updateButton("disabled")}).catch(function(e){console.error("Error unsubscribing",e),updateButton("disabled")})}function updateSubscriptionOnServer(e,t="POST"){const n=e.getKey("p256dh"),i=e.getKey("auth"),o=(PushManager.supportedContentEncodings||["aesgcm"])[0];let r={endpoint:e.endpoint,publicKey:n?btoa(String.fromCharCode.apply(null,new Uint8Array(n))):null,authToken:i?btoa(String.fromCharCode.apply(null,new Uint8Array(i))):null,contentEncoding:o};return fetch(jsObject.notifications_subscribe,{method:t,credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}).then(function(){return e}).catch(function(e){console.error(e)})}function urlB64ToUint8Array(e){const t=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),n=window.atob(t),i=new Uint8Array(n.length);for(let e=0;e<n.length;++e)i[e]=n.charCodeAt(e);return i}function updateButton(e){if(null!==pushButton)switch(e){case"enabled":pushButton.disabled=!1,pushButton.textContent=lang.disable_notifications,isSubscribed=!0;break;case"disabled":pushButton.disabled=!1,pushButton.textContent=lang.enable_notifications,isSubscribed=!1;break;case"computing":pushButton.disabled=!0,pushButton.textContent=lang.loading;break;case"incompatible":pushButton.disabled=!0,pushButton.textContent=lang.no_notifications_possible;break;default:console.error("Unhandled push button state",e)}}function getCategorySubscriptions(e){if(null!==categoriesList){let t=e.endpoint,n={endpoint:t};getCSRFToken().then(function(e){n.csrf_name=e.csrf_name,n.csrf_value=e.csrf_value,fetch(jsObject.notifications_clients_categories,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then(function(e){return e.json()}).then(function(e){"error"!==e.status&&(categoriesElements.forEach(function(n,i){let o=parseInt(n.value);-1!==e.data.indexOf(o)?n.setAttribute("checked",!0):n.removeAttribute("checked"),n.addEventListener("click",function(){n.checked?setCategorySubscriptions(t,1,o):setCategorySubscriptions(t,0,o)})}),categoriesList.classList.remove("hidden"))}).catch(function(e){alert(e)})})}}function setCategorySubscriptions(e,t,n){let i={endpoint:e,category:n,type:t};getCSRFToken().then(function(e){i.csrf_name=e.csrf_name,i.csrf_value=e.csrf_value,fetch(jsObject.notifications_clients_set_category,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)}).then(function(e){return e.json()}).then(function(e){console.log(e)}).catch(function(e){alert(e)})})}window.addEventListener("online",handleNetworkChange),window.addEventListener("offline",handleNetworkChange),handleNetworkChange();const pushButton=document.querySelector("#enable_notifications"),categoriesList=document.querySelector("#notifications_categories_list"),categoriesElements=document.querySelectorAll("#notifications_categories_list input.set_notifications_category");let isSubscribed=!1;"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("/sw.js?v=20190131").then(function(e){console.log("Service worker successfully registered on scope",e.scope),initialize()}).catch(function(e){console.error("Service Worker Error",e)})});