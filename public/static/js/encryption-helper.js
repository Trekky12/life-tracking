"use strict";function createKeyMaterial(t){let e=new TextEncoder;return window.crypto.subtle.importKey("raw",e.encode(t),{name:"PBKDF2"},!1,["deriveBits","deriveKey"])}function deriveKEK(t,e,r){return window.crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:r,hash:"SHA-512"},t,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])}async function encryptData(t,e){try{const r=window.crypto.getRandomValues(new Uint8Array(16)),n=await window.crypto.subtle.encrypt({name:"AES-GCM",iv:r},t,(new TextEncoder).encode(e)),a=new Uint8Array(n);let o=new Uint8Array(r.byteLength+a.byteLength);o.set(r,0),o.set(a,r.byteLength);return buff_to_base64(o)}catch(t){throw console.error(`Error Encrypting - ${t}`),t}}async function decryptData(t,e){try{const r=base64_to_buf(e),n=r.slice(0,16),a=r.slice(16),o=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:n},t,a);return(new TextDecoder).decode(o)}catch(t){throw console.log(`Error Decrypting - ${t}`),t}}async function createKeyObject(t){return window.crypto.subtle.importKey("raw",t,"AES-GCM",!1,["encrypt","decrypt"])}function buff_to_base64(t){return btoa(String.fromCharCode.apply(null,t))}function base64_to_buf(t){return Uint8Array.from(atob(t),(t=>t.charCodeAt(null)))}function fromHexString(t){return Uint8Array.from(t.match(/.{1,2}/g).map((t=>parseInt(t,16))))}async function getEncryptionParameters(){let t={},e=await getCSRFToken();t.csrf_name=e.csrf_name,t.csrf_value=e.csrf_value;let r=await fetch(jsObject.timesheets_notice_params,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),n=await r.json();if("success"!==n.status)throw"Unable to retrieve parameters";return n}async function getRawMasterKeyFromKEK(t,e,r){try{if("test"!==await decryptData(t,e))throw"Wrong message!"}catch(t){throw console.error(`Unable to decrypt test message - ${t}`),t}let n;try{n=base64_to_buf(await decryptData(t,r))}catch(t){throw console.error(`Unable to decrypt masterKey - ${t}`),t}return n}async function getStore(){if("indexedDB"in window){let t=indexedDB.open("lifeTrackingData",2);return new Promise((function(e,r){t.onsuccess=function(){var r=t.result.transaction("keys","readwrite").objectStore("keys");e(r)}}))}}async function getMasterKeyFromPW(t,e,r=!0){const n=e.iterations,a=base64_to_buf(e.salt),o=await createKeyMaterial(t),c=await deriveKEK(o,a,n);let i=await getRawMasterKeyFromKEK(c,e.testMessageEncryptedWithKEK,e.masterKeyEncryptedWithKEK);if(r){(await getStore()).add({project:projectID,key:c})}return i}async function getKEKfromStore(){let t=await getStore();return await new Promise((function(e,r){let n=t.get(projectID);n.onsuccess=function(t){n.result&&e(n.result.key),e(null)}}))}function IsJsonString(t){try{JSON.parse(t)}catch(t){return!1}return!0}async function getMasterKeyFromStoreOrInput(t,e){let r,n=await getKEKfromStore();if(n)try{r=await getRawMasterKeyFromKEK(n,e.data.testMessageEncryptedWithKEK,e.data.masterKeyEncryptedWithKEK)}catch(e){let r=await getStore();await r.delete(t);return!1}else{let t=await inputDialog(lang.timesheets_notice_password,!0);if(!1===t)return!1;try{r=await getMasterKeyFromPW(t,e.data,!0)}catch(t){return console.log(t),!1}}return await createKeyObject(r)}