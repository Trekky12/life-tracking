"use strict";const alert=document.querySelector("#passwordAlert"),alertDetail=alert.querySelector("#alertDetail"),saveBtn=document.querySelector("button#save_notice_password"),oldPassword=document.querySelector("input#inputOldPassword"),newPassword1=document.querySelector("input#inputNewPassword1"),newPassword2=document.querySelector("input#inputNewPassword2");async function setPassword(){let e={},t=await getCSRFToken();e.csrf_name=t.csrf_name,e.csrf_value=t.csrf_value;let a=await fetch(jsObject.timesheets_notice_params,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),s=await a.json();if("success"!==s.status)return console.error("Unable to retrieve parameters"),1;const r=s.data.iterations,n=s.data.test;let o;if(n){let e=base64_to_buf(s.data.salt);const t=await createKeyMaterial(oldPassword.value),a=await deriveAESKey(t,e,r);try{if("test"!==await decryptData(a,n))throw"Wrong message!"}catch(e){return console.error(`Unable to decrypt test message - ${e}`),1}try{const e=s.data.KEK,t=await decryptData(a,e);o=base64_to_buf(t)}catch(e){return console.error(`Unable to decrypt KEK - ${e}`),1}}else o=window.crypto.getRandomValues(new Uint8Array(32));let i=window.crypto.getRandomValues(new Uint8Array(16));const l=await createKeyMaterial(newPassword1.value),c=await deriveAESKey(l,i,r),d=await encryptData(c,"test"),u=await encryptData(c,buff_to_base64(o));let w={salt:buff_to_base64(i),iterations:r,KEK:u,test:d},m=await getCSRFToken();w.csrf_name=m.csrf_name,w.csrf_value=m.csrf_value;let p=await fetch(jsObject.timesheets_notice_params_save,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify(w)});return"success"!==(await p.json()).status?(console.error("Unable to save parameters"),1):0}window.crypto&&window.crypto.subtle||(alertDetail.innerHTML=lang.decrypt_error,alert.classList.remove("hidden"),alert.classList.add("danger"),document.querySelector("input#inputSetPassword").disabled=!0,document.querySelector("input#inputSetPassword2").disabled=!0),saveBtn.addEventListener("click",(async function(e){if(e.preventDefault(),alertDetail.innerHTML="",alert.classList.add("hidden"),alert.classList.remove("danger"),alert.classList.remove("success"),""==newPassword1.value||""==newPassword2.value||newPassword1.value!==newPassword2.value)alertDetail.innerHTML=lang.timesheets_notice_password_no_match,alert.classList.remove("hidden"),alert.classList.add("danger"),alert.classList.remove("success");else{await setPassword()>0?(alertDetail.innerHTML=lang.timesheets_notice_password_wrong,alert.classList.remove("hidden"),alert.classList.add("danger"),alert.classList.remove("success")):(alertDetail.innerHTML=lang.timesheets_notice_password_success,alert.classList.remove("hidden"),alert.classList.remove("danger"),alert.classList.add("success"),oldPassword.parentElement.classList.remove("hidden"))}document.querySelector("form").reset(),loadingWindowOverlay.classList.add("hidden")}));