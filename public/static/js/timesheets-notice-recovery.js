"use strict";const loadingIconTimesheetNotice=document.querySelector("#loadingIconTimesheetNotice"),alertError=document.querySelector("#alertError"),alertErrorDetail=alertError.querySelector("#alertErrorDetail"),recoveryKeyWrapper=document.querySelector("#recoveryKeyWrapper"),projectID=parseInt(recoveryKeyWrapper.dataset.project);async function getRecoveryCode(){const e=await getEncryptionParameters();if(!e.data.testMessageEncryptedWithKEK)return alertErrorDetail.innerHTML=lang.timesheets_no_password_set,alertError.classList.remove("hidden"),void loadingIconTimesheetNotice.classList.add("hidden");const r=await getMasterKeyFromStoreOrInput(projectID,e);if(!1===r||!e.data.testMessageEncryptedWithRecoveryKey)return alertErrorDetail.innerHTML=lang.decrypt_error,alertError.classList.remove("hidden"),void loadingIconTimesheetNotice.classList.add("hidden");const t=e.data.recoveryKeyEncryptedWithMasterKey;try{const e=await decryptTextData(r,t),o=base64_to_buf(e),a=bip39.entropyToMnemonic(o);recoveryKeyWrapper.querySelector("code").innerHTML=a,alertErrorDetail.innerHTML="",alertError.classList.add("hidden"),alertError.classList.remove("danger"),loadingIconTimesheetNotice.classList.add("hidden"),recoveryKeyWrapper.classList.remove("hidden")}catch(e){throw console.error(`Unable to decrypt recoveryKey - ${e}`),e}}window.crypto&&window.crypto.subtle||(alertErrorDetail.innerHTML=lang.decrypt_error,alertError.classList.remove("hidden"),alertError.classList.add("danger"),loadingIconTimesheetNotice.classList.add("hidden")),getRecoveryCode();